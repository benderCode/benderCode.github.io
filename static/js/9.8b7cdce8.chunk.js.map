{"version":3,"sources":["network/RegExp.js","pages/addr/addAddr.jsx"],"names":["regExp","Reg_IDCardNo","Reg_TelNo","Reg_Number","Reg_Name","Reg_Text","Reg_email","RegNull","RegHtmlLabel","addAddr","props","state","isLoading","submitFlag","sourceType","provinceList","provinceId","provinceName","cityList","cityId","cityName","areaList","areaId","areaName","address","name","tel","addrId","addrText","this","location","setState","addrObj","provinceCode","cityCode","areaCode","userName","userPhone","id","findProvinceList","className","title","leftClick","history","goBack","onChange","event","target","value","defaultValue","type","placeholder","maxLength","readOnly","onClick","visibleFlag","text","disabled","click","saveUserAddress","updateUserAddress","map","item","index","key","findCityList","findAreaList","Loading","Get","requestUrl","then","result","status","data","console","log","catch","error","message","open","content","icon","duration","test","Post","Public","success","finally","Put","React","Component","defaultProps"],"mappings":"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","file":"static/js/9.8b7cdce8.chunk.js","sourcesContent":["export const regExp = {\n    Reg_IDCardNo: /(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{2}[0-9Xx]$)/, // 身份证\n    Reg_TelNo: /^1\\d{10}$/,// 手机号\n    Reg_Number: /^\\d{6}$/, // 验证数字\n    Reg_Name: /^[\\u4e00-\\u9fa5]{2,6}$/,//验证名字\n    Reg_Text: /^[0-9a-zA-Z\\u4e00-\\u9fa5`~!@#$^&*\\\\()=|{}':;',\\\\\\\\.<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？%+_]{1,20}$/,\n    Reg_email: /^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w{2,3}){1,3})$/,//邮箱\n    RegNull: /^\\s*$/g,// 空字符\n    RegHtmlLabel: /[<\\/?.+?\\/?>]/g,// html标签\n};","/**\n * 新增地址 addAddr\n */\n\nimport React from 'react';\nimport Nav from '../../components/nav'; // 导航组件\nimport Btn from '../../components/btn'; // 按钮组件\nimport './addAddr.css';\nimport Loading from '../../components/Loading';\nimport { Get, Post, Put } from '../../network/Fetch';\nimport { requestUrl } from '../../network/Url';\nimport * as Public from '../../utils/Public';\nimport { regExp } from '../../network/RegExp';\nimport { message } from 'antd';\n\nexport default class addAddr extends React.Component {\n    static defaultProps = {\n\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            submitFlag: true,// 是否可以提交\n            sourceType: 'add',\n            provinceList: [],// 省数组\n            provinceId: '',// 省Id\n            provinceName: '',// 省名称\n            cityList: [],// 市数组\n            cityId: '',// 市Id\n            cityName: '',// 市名称\n            areaList: [], // 区数组\n            areaId: '', // 区id\n            areaName: '', // 区名字\n            address: '',// 详细地址\n            name: '',// 姓名\n            tel: '',// 电话\n            addrId: '',// 地址id\n            addrText: '',// 省市区\n        }\n    }\n    componentWillMount() {\n        if (this.props.location.state) {\n            this.setState({\n                sourceType: this.props.location.state.sourceType,\n                addrText: this.props.location.state.addrObj.provinceName,// 省市区\n                provinceId: this.props.location.state.addrObj.provinceCode,// 省Id\n                cityId: this.props.location.state.addrObj.cityCode,// 市Id\n                areaId: this.props.location.state.addrObj.areaCode, // 区id\n                address: this.props.location.state.addrObj.address,// 详细地址\n                name: this.props.location.state.addrObj.userName,// 姓名\n                tel: this.props.location.state.addrObj.userPhone,// 电话\n                addrId: this.props.location.state.addrObj.id,// 电话\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.findProvinceList();\n    }\n\n    render() {\n        return (\n            <div className=\"container addAddr\">\n                <Nav title={this.state.sourceType === 'add' ? '新增地址' : '编辑地址'} leftClick={() => { this.props.history.goBack() }} />\n                <div className=\"content\">\n                    <div className=\"addBox\">\n                        <div className=\"rowBox\">\n                            <p className=\"title\">姓名</p>\n                            <input\n                                onChange={(event) => {\n                                    this.setState({\n                                        name: event.target.value\n                                    })\n                                }}\n                                defaultValue={this.state.name || ''}\n                                type=\"text\"\n                                placeholder=\"请填写收货人姓名\"\n                            />\n                        </div>\n                        <div className=\"rowBox\">\n                            <p className=\"title\">手机号码</p>\n                            <input\n                                onChange={(event) => {\n                                    this.setState({\n                                        tel: event.target.value\n                                    })\n                                }}\n                                maxLength={11}\n                                defaultValue={this.state.tel || ''}\n                                type=\"tel\"\n                                placeholder=\"请填写收货人手机号码\"\n                            />\n                        </div>\n                        <div className=\"rowBox\">\n                            <p className=\"title\">所在地区</p>\n                            <input\n                                readOnly=\"readOnly\"\n                                defaultValue={this.state.sourceType === 'edit' ? this.state.addrText : ''}\n                                type=\"text\"\n                                placeholder=\"省市区\"\n                                onClick={() => {\n                                    this.setState({\n                                        visibleFlag: true,\n                                    })\n                                }}\n                                value={this.state.provinceName + this.state.cityName + this.state.areaName}\n                            />\n                        </div>\n                        <div className=\"rowBox\">\n                            <p className=\"title\">详细地址</p>\n                            <input\n                                onChange={(event) => {\n                                    this.setState({\n                                        address: event.target.value\n                                    })\n                                }}\n                                defaultValue={this.state.address || ''}\n                                type=\"text\"\n                                placeholder=\"街道、楼牌号等\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <Btn\n                    text={'保存'}\n                    disabled={this.state.submitFlag}\n                    click={() => {\n                        this.state.sourceType === 'add' ?\n                            this.saveUserAddress()\n                            :\n                            this.updateUserAddress();\n\n                    }}\n                />\n\n                {/* 省市区选择 */}\n                {this.state.visibleFlag ?\n                    <div className=\"maskContent\">\n                        <div className=\"maskClose\" onClick={() => { this.setState({ visibleFlag: false }) }}></div>\n                        <div className=\"selectContent\">\n                            <div className=\"btnBox\">\n                                <span onClick={() => { this.setState({ visibleFlag: false }) }}></span>\n                                <span onClick={() => { this.setState({ visibleFlag: false }) }}>确定</span>\n                            </div>\n                            <div className=\"selectBox\">\n                                <div className=\"selectItem\">\n                                    <div className=\"scrollBox\">\n                                        {this.state.provinceList.map((item, index) => {\n                                            return (\n                                                <p\n                                                    className={this.state.provinceId === item.areaCode ? 'active' : null}\n                                                    key={index}\n                                                    onClick={() => {\n                                                        this.setState({\n                                                            provinceId: item.areaCode,// 省Id\n                                                            provinceName: item.areaName,// 省名称\n                                                        })\n                                                        this.findCityList(item.areaCode);\n                                                    }}>{item.areaName}</p>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"selectItem\">\n                                    <div className=\"scrollBox\">\n                                        {this.state.cityList.map((item, index) => {\n                                            return (\n                                                <p\n                                                    className={this.state.cityId === item.areaCode ? 'active' : null}\n                                                    key={index}\n                                                    onClick={() => {\n                                                        this.setState({\n                                                            cityId: item.areaCode,// 市Id\n                                                            cityName: item.areaName,// 市名称\n                                                        })\n                                                        this.findAreaList(item.areaCode)\n                                                    }}>{item.areaName}</p>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"selectItem\">\n                                    <div className=\"scrollBox\">\n                                        {this.state.areaList.map((item, index) => {\n                                            return (\n                                                <p\n                                                    className={this.state.areaId === item.areaCode ? 'active' : null}\n                                                    key={index}\n                                                    onClick={() => {\n                                                        this.setState({\n                                                            areaId: item.areaCode, // 区id\n                                                            areaName: item.areaName, // 区名字\n                                                        })\n                                                    }}>{item.areaName}</p>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n\n                {this.state.isLoading ? <Loading /> : null}\n            </div>\n        );\n    }\n\n    // 获取省数据\n    findProvinceList() {\n        Get(requestUrl.findProvinceList).then((result) => {\n            if (result.status === 'SUCCESS') {\n                this.findCityList(result.data[0].areaCode);\n                this.setState({\n                    provinceList: result.data,\n                    provinceId: result.data[0].areaCode,\n                    provinceName: result.data[0].areaName,\n                })\n            } else if (result.status === 'NONE_DATA') {\n                this.setState({\n                    provinceList: [],\n                    provinceId: '',\n                    provinceName: '',\n                    cityList: [],\n                    cityId: '',\n                    cityName: '',\n                    areaList: [],\n                    areaId: '',\n                    areaName: '',\n                })\n            } else {\n                console.log('查询失败')\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    // 获取市数据\n    findCityList(provinceId) {\n        Get(requestUrl.findCityList + '?areaCode=' + provinceId).then((result) => {\n            if (result.status === 'SUCCESS') {\n                this.findAreaList(result.data[0].areaCode);\n                this.setState({\n                    cityList: result.data,\n                    cityId: result.data[0].areaCode,\n                    cityName: result.data[0].areaName,\n                })\n            } else if (result.status === 'NONE_DATA') {\n                this.setState({\n                    cityList: [],\n                    cityId: '',\n                    cityName: '',\n                    areaList: [],\n                    areaId: '',\n                    areaName: '',\n                })\n            } else {\n                console.log('查询失败')\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    // 获取区、县数据\n    findAreaList(cityId) {\n        Get(requestUrl.findAreaList + '?areaCode=' + cityId).then((result) => {\n            if (result.status === 'SUCCESS') {\n                this.setState({\n                    areaList: result.data,\n                    areaId: result.data[0].areaCode,\n                    areaName: result.data[0].areaName,\n                })\n            } else if (result.status === 'NONE_DATA') {\n                this.setState({\n                    areaList: [],\n                    areaId: '',\n                    areaName: '',\n                })\n            } else {\n                console.log('查询失败')\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    // 新增地址\n    saveUserAddress() {\n        if (!this.state.name) {\n            message.open({\n                content: '请输入收货人姓名',\n                icon: '',\n                duration: 3,\n            });\n            return false;\n        } else if (!this.state.tel) {\n            message.open({\n                content: '请输入收货人手机号',\n                icon: '',\n                duration: 3,\n            });\n            return false;\n        } else if (!regExp.Reg_TelNo.test(this.state.tel)) {\n            message.open({\n                content: '请输入正确的手机号码',\n                icon: '',\n                duration: 3,\n            });\n        } else if (!this.state.address) {\n            message.open({\n                content: '请输入详细地址',\n                icon: '',\n                duration: 3,\n            });\n            return false;\n        } else if (regExp.RegHtmlLabel.test(this.state.address)) {\n            message.open({\n                content: '您输入的详细地址有非法字符',\n                icon: '',\n                duration: 3,\n            });\n        } else {\n            this.setState({ isLoading: true })\n            Post(requestUrl.saveUserAddress, {\n                \"provinceCode\": this.state.provinceId,// 省Id\n                \"cityCode\": this.state.cityId,// 市Id\n                \"areaCode\": this.state.areaId,// 区Id\n                \"address\": this.state.address,// 详细地址\n                \"isDefault\": \"0\",// 默认地址 0\n                \"provinceName\": this.state.provinceName + this.state.cityName + this.state.areaName,// 省市区名称\n                \"userId\": Public.getItem('userId'),// 用户id\n                \"userName\": this.state.name,// 用户姓名\n                \"userPhone\": this.state.tel, //用户手机号\n            }).then((result) => {\n                if (result.status === 'SUCCESS') {\n                    message.success(\"保存成功\", 2);\n                    this.props.history.goBack();\n                } else {\n                    message.error('保存失败')\n                }\n            }).catch((error) => {\n                console.log(error)\n            }).finally(() => {\n                this.setState({ isLoading: false })\n            })\n        }\n    }\n\n\n    // 修改\n    updateUserAddress() {\n        if (!this.state.name) {\n            message.open({\n                content: '请输入收货人姓名',\n                icon: '',\n                duration: 3,\n            });\n            return false;\n        } else if (!this.state.tel) {\n            message.open({\n                content: '请输入收货人手机号',\n                icon: '',\n                duration: 3,\n            });\n            return false;\n        } else if (!regExp.Reg_TelNo.test(this.state.tel)) {\n            message.open({\n                content: '请输入正确的手机号码',\n                icon: '',\n                duration: 3,\n            });\n        } else if (!this.state.address) {\n            message.open({\n                content: '请输入详细地址',\n                icon: '',\n                duration: 3,\n            });\n            return false;\n        } else if (regExp.RegHtmlLabel.test(this.state.address)) {\n            message.open({\n                content: '您输入的详细地址有非法字符',\n                icon: '',\n                duration: 3,\n            });\n        } else {\n            this.setState({ isLoading: true })\n            Put(requestUrl.updateUserAddress, {\n                \"provinceCode\": this.state.provinceId,// 省Id\n                \"cityCode\": this.state.cityId,// 市Id\n                \"areaCode\": this.state.areaId,// 区Id\n                \"address\": this.state.address,// 详细地址\n                \"isDefault\": \"0\",// 默认地址 0\n                \"id\": this.state.addrId,// 地址id\n                \"provinceName\": this.state.areaName ? (this.state.provinceName + this.state.cityName + this.state.areaName) : this.state.addrText,// 省市区名称\n                \"userId\": Public.getItem('userId'),// 用户id\n                \"userName\": this.state.name,// 用户姓名\n                \"userPhone\": this.state.tel, //用户手机号\n            }).then((result) => {\n                if (result.status === 'SUCCESS') {\n                    message.success(\"修改成功\", 2)\n                    this.props.history.goBack();\n                } else {\n                    message.error('修改失败')\n                }\n            }).catch((error) => {\n                console.log(error)\n            }).finally(() => {\n                this.setState({ isLoading: false })\n            })\n        }\n    }\n\n}\n\n"],"sourceRoot":""}